AC_CHECK_LIB(c, quotactl, [QUOTACTL="-DQUOTACTL_IN_LIBC"]) dnl for FreeBSD
AC_SUBST(QUOTACTL)
AC_CHECK_LIB(crypt, main, [LIBCRYPT="-lcrypt"]) dnl for BSD
AC_SUBST(LIBCRYPT)
AC_CHECK_LIB(pwdb, __pwdb_fgetspent, [LIBPWDB="-lpwdb"]) dnl pwdb support for PAM systems
AC_SUBST(LIBPWDB)
AC_CHECK_LIB(gen,getspent,[LIBGEN="-lgen"])dnl for UnixWare
AC_SUBST(LIBGEN)

C_PATH_PAM
if test "x$no_pam" = "xyes"; then
        pam_support="no"
else
        pam_support="yes"
        shadow_support="no" # if pam is installed, use it. We can't savely
                            # test, if it works *sigh*
fi
if test "$pam_support" = "yes"; then
  AC_CHECK_LIB(pam, main, [PASSWDLIB="-lpam -ldl"
  AC_DEFINE_UNQUOTED(HAVE_PAM_LIB)],
  [],-ldl)
fi


dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(crypt.h fcntl.h mntent.h linux/quota.h linux/unistd.h \
                 paths.h sys/fs/ufs_quota.h sys/mntent.h sys/mnttab.h \
                 sys/quota.h sys/time.h unistd.h sys/params.h sys/param.h \
                 signal.h)

case "$host" in 
*irix*) AC_DEFINE(HAVE_IRIX, 1)
       ;;
*linux*) AC_DEFINE(HAVE_LINUX,1)
       ;;
esac

AC_ARG_WITH(shadow, [  --without-shadow        Compile without shadow support], enable_shadow="$withval", enable_shadow="yes")
if test "$enable_shadow" = "yes"; then
  KU_SHADOW="-D_KU_SHADOW"
fi
AC_SUBST(KU_SHADOW)

AC_ARG_WITH(quota, [  --without-quota         Compile without quota support], enable_quota="$withval", enable_quota="yes")
if test "$enable_quota" = "yes"; then
  KU_QUOTA="-D_KU_QUOTA"
fi
AC_SUBST(KU_QUOTA)

AC_ARG_WITH(nis, [  --with-nis              Compile with NIS support], enable_nis="$withval", enable_nis="no")
if test "$enable_nis" = "yes"; then
  KU_NIS="-D_KU_NIS"
fi
AC_SUBST(KU_NIS)

AC_ARG_WITH(homeprefix, [ --with-homeprefix        use specified prefix for homedir [default=/home] ], ku_homeprefix="$withval", ku_homeprefix="/home")
AC_DEFINE_UNQUOTED(KU_HOMEPREFIX, "$ku_homeprefix")

AC_ARG_WITH(private-groups, [ --with-private-groups   user private groups [default=no] ], ku_userprivategroup="$withval", ku_userprivategroup="no")
if test "$ku_userprivategroup" = "yes"; then
  ku_userprivategroup="true"
else
  ku_userprivategroup="false"
fi
AC_DEFINE_UNQUOTED(KU_USERPRIVATEGROUP, $ku_userprivategroup)

AC_CHECK_FGETPWENT
AC_CHECK_FGETGRENT

